{"version":3,"sources":["../../../src/TokenClient/callers/GetTokenInfo.js"],"names":["GetTokenInfo","params","functionName","input","output","getValueFor","name","symbol","decimals","callResult","convertOutputValues","prop","data","client","call","Caller"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;IAOqBA,Y;;;AAKnB,wBAAYC,MAAZ,EAAuB;AAAA;AAAA;AAEnBC,oBAAc,cAFK;AAGnBC,aAAO,EAHY;AAInBC,cAAQ,CACN,CAAC,MAAD,EAAS,QAAT,CADM,EAEN,CAAC,QAAD,EAAW,QAAX,CAFM,EAGN,CAAC,UAAD,EAAa,QAAb,CAHM;AAJW,OAShBH,MATgB;AAWtB;;;;;;;;;;;;uBAEoB,KAAKI,WAAL,CAAiB,MAAjB,C;;;AAAbC,oB;;uBACe,KAAKD,WAAL,CAAiB,QAAjB,C;;;AAAfE,sB;;uBACiB,KAAKF,WAAL,CAAiB,UAAjB,C;;;AAAjBG,wB;AAEAC,0B,GAAyB,CAACH,IAAD,EAAOC,MAAP,EAAeC,QAAf,C;iDAExB,KAAKE,mBAAL,CAAyBD,UAAzB,C;;;;;;;;;;;;;;;;;;;6GAESE,I;;;;;;AACZC,oB;;;uBAEW,KAAKC,MAAL,CAAYC,IAAZ,CAAiBH,IAAjB,EAAuB,EAAvB,C;;;AAAbC,oB;;;;;;;;AAEAA,uBAAO,IAAP;;;kDAEKA,I;;;;;;;;;;;;;;;;;;EAjC+B,iCAAeG,M;AATzD;;kBASqBf,Y","file":"GetTokenInfo.js","sourcesContent":["/* @flow */\n/* eslint-disable no-underscore-dangle */\n\nimport ContractClient from '@colony/colony-js-contract-client';\n\nimport type TokenClient from '../index';\n\ntype InputValues = {};\ntype CallResult = [?string, ?string, ?number];\n\nexport default class GetTokenInfo extends ContractClient.Caller<\n  InputValues,\n  *,\n  TokenClient,\n> {\n  constructor(params: *) {\n    super({\n      functionName: 'getTokenInfo',\n      input: [],\n      output: [\n        ['name', 'string'],\n        ['symbol', 'string'],\n        ['decimals', 'number'],\n      ],\n      ...params,\n    });\n  }\n  async call() {\n    const name = await this.getValueFor('name');\n    const symbol = await this.getValueFor('symbol');\n    const decimals = await this.getValueFor('decimals');\n\n    const callResult: CallResult = [name, symbol, decimals];\n\n    return this.convertOutputValues(callResult);\n  }\n  async getValueFor(prop: string) {\n    let data;\n    try {\n      data = await this.client.call(prop, []);\n    } catch (e) {\n      data = null;\n    }\n    return data;\n  }\n}\n"]}